<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xd.medicine.dao.autoMapper.TrustAttrMapper" >
  <resultMap id="BaseResultMap" type="xd.medicine.entity.bo.TrustAttr" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="department" property="department" jdbcType="TINYINT" />
    <result column="demand_title" property="demandTitle" jdbcType="TINYINT" />
    <result column="demand_workage" property="demandWorkage" jdbcType="TINYINT" />
    <result column="demand_degree" property="demandDegree" jdbcType="TINYINT" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, department, demand_title, demand_workage, demand_degree
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xd.medicine.entity.bo.TrustAttrExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from trust_attr
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from trust_attr
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from trust_attr
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xd.medicine.entity.bo.TrustAttrExample" >
    delete from trust_attr
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xd.medicine.entity.bo.TrustAttr" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trust_attr (department, demand_title, demand_workage, 
      demand_degree)
    values (#{department,jdbcType=TINYINT}, #{demandTitle,jdbcType=TINYINT}, #{demandWorkage,jdbcType=TINYINT}, 
      #{demandDegree,jdbcType=TINYINT})
  </insert>
  <insert id="insertSelective" parameterType="xd.medicine.entity.bo.TrustAttr" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into trust_attr
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="department != null" >
        department,
      </if>
      <if test="demandTitle != null" >
        demand_title,
      </if>
      <if test="demandWorkage != null" >
        demand_workage,
      </if>
      <if test="demandDegree != null" >
        demand_degree,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="department != null" >
        #{department,jdbcType=TINYINT},
      </if>
      <if test="demandTitle != null" >
        #{demandTitle,jdbcType=TINYINT},
      </if>
      <if test="demandWorkage != null" >
        #{demandWorkage,jdbcType=TINYINT},
      </if>
      <if test="demandDegree != null" >
        #{demandDegree,jdbcType=TINYINT},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xd.medicine.entity.bo.TrustAttrExample" resultType="java.lang.Integer" >
    select count(*) from trust_attr
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update trust_attr
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.department != null" >
        department = #{record.department,jdbcType=TINYINT},
      </if>
      <if test="record.demandTitle != null" >
        demand_title = #{record.demandTitle,jdbcType=TINYINT},
      </if>
      <if test="record.demandWorkage != null" >
        demand_workage = #{record.demandWorkage,jdbcType=TINYINT},
      </if>
      <if test="record.demandDegree != null" >
        demand_degree = #{record.demandDegree,jdbcType=TINYINT},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update trust_attr
    set id = #{record.id,jdbcType=INTEGER},
      department = #{record.department,jdbcType=TINYINT},
      demand_title = #{record.demandTitle,jdbcType=TINYINT},
      demand_workage = #{record.demandWorkage,jdbcType=TINYINT},
      demand_degree = #{record.demandDegree,jdbcType=TINYINT}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xd.medicine.entity.bo.TrustAttr" >
    update trust_attr
    <set >
      <if test="department != null" >
        department = #{department,jdbcType=TINYINT},
      </if>
      <if test="demandTitle != null" >
        demand_title = #{demandTitle,jdbcType=TINYINT},
      </if>
      <if test="demandWorkage != null" >
        demand_workage = #{demandWorkage,jdbcType=TINYINT},
      </if>
      <if test="demandDegree != null" >
        demand_degree = #{demandDegree,jdbcType=TINYINT},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xd.medicine.entity.bo.TrustAttr" >
    update trust_attr
    set department = #{department,jdbcType=TINYINT},
      demand_title = #{demandTitle,jdbcType=TINYINT},
      demand_workage = #{demandWorkage,jdbcType=TINYINT},
      demand_degree = #{demandDegree,jdbcType=TINYINT}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>