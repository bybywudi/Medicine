<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xd.medicine.dao.autoMapper.PostDutyLogMapper" >
  <resultMap id="BaseResultMap" type="xd.medicine.entity.bo.PostDutyLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="fulfill_time" property="fulfillTime" jdbcType="TINYINT" />
    <result column="state" property="state" jdbcType="TINYINT" />
    <result column="duty_id" property="dutyId" jdbcType="INTEGER" />
    <result column="sub_type" property="subType" jdbcType="TINYINT" />
    <result column="sub_id" property="subId" jdbcType="INTEGER" />
    <result column="obj_id" property="objId" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, fulfill_time, state, duty_id, sub_type, sub_id, obj_id
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xd.medicine.entity.bo.PostDutyLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from post_duty_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from post_duty_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from post_duty_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xd.medicine.entity.bo.PostDutyLogExample" >
    delete from post_duty_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xd.medicine.entity.bo.PostDutyLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into post_duty_log (fulfill_time, state, duty_id, 
      sub_type, sub_id, obj_id
      )
    values (#{fulfillTime,jdbcType=TINYINT}, #{state,jdbcType=TINYINT}, #{dutyId,jdbcType=INTEGER}, 
      #{subType,jdbcType=TINYINT}, #{subId,jdbcType=INTEGER}, #{objId,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="xd.medicine.entity.bo.PostDutyLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into post_duty_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="fulfillTime != null" >
        fulfill_time,
      </if>
      <if test="state != null" >
        state,
      </if>
      <if test="dutyId != null" >
        duty_id,
      </if>
      <if test="subType != null" >
        sub_type,
      </if>
      <if test="subId != null" >
        sub_id,
      </if>
      <if test="objId != null" >
        obj_id,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="fulfillTime != null" >
        #{fulfillTime,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        #{state,jdbcType=TINYINT},
      </if>
      <if test="dutyId != null" >
        #{dutyId,jdbcType=INTEGER},
      </if>
      <if test="subType != null" >
        #{subType,jdbcType=TINYINT},
      </if>
      <if test="subId != null" >
        #{subId,jdbcType=INTEGER},
      </if>
      <if test="objId != null" >
        #{objId,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xd.medicine.entity.bo.PostDutyLogExample" resultType="java.lang.Integer" >
    select count(*) from post_duty_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update post_duty_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.fulfillTime != null" >
        fulfill_time = #{record.fulfillTime,jdbcType=TINYINT},
      </if>
      <if test="record.state != null" >
        state = #{record.state,jdbcType=TINYINT},
      </if>
      <if test="record.dutyId != null" >
        duty_id = #{record.dutyId,jdbcType=INTEGER},
      </if>
      <if test="record.subType != null" >
        sub_type = #{record.subType,jdbcType=TINYINT},
      </if>
      <if test="record.subId != null" >
        sub_id = #{record.subId,jdbcType=INTEGER},
      </if>
      <if test="record.objId != null" >
        obj_id = #{record.objId,jdbcType=INTEGER},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update post_duty_log
    set id = #{record.id,jdbcType=INTEGER},
      fulfill_time = #{record.fulfillTime,jdbcType=TINYINT},
      state = #{record.state,jdbcType=TINYINT},
      duty_id = #{record.dutyId,jdbcType=INTEGER},
      sub_type = #{record.subType,jdbcType=TINYINT},
      sub_id = #{record.subId,jdbcType=INTEGER},
      obj_id = #{record.objId,jdbcType=INTEGER}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xd.medicine.entity.bo.PostDutyLog" >
    update post_duty_log
    <set >
      <if test="fulfillTime != null" >
        fulfill_time = #{fulfillTime,jdbcType=TINYINT},
      </if>
      <if test="state != null" >
        state = #{state,jdbcType=TINYINT},
      </if>
      <if test="dutyId != null" >
        duty_id = #{dutyId,jdbcType=INTEGER},
      </if>
      <if test="subType != null" >
        sub_type = #{subType,jdbcType=TINYINT},
      </if>
      <if test="subId != null" >
        sub_id = #{subId,jdbcType=INTEGER},
      </if>
      <if test="objId != null" >
        obj_id = #{objId,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xd.medicine.entity.bo.PostDutyLog" >
    update post_duty_log
    set fulfill_time = #{fulfillTime,jdbcType=TINYINT},
      state = #{state,jdbcType=TINYINT},
      duty_id = #{dutyId,jdbcType=INTEGER},
      sub_type = #{subType,jdbcType=TINYINT},
      sub_id = #{subId,jdbcType=INTEGER},
      obj_id = #{objId,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>