<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="xd.medicine.dao.autoMapper.UserLogMapper" >
  <resultMap id="BaseResultMap" type="xd.medicine.entity.bo.UserLog" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="doctor_id" property="doctorId" jdbcType="INTEGER" />
    <result column="doctor_name" property="doctorName" jdbcType="VARCHAR" />
    <result column="evaluate_value" property="evaluateValue" jdbcType="TINYINT" />
    <result column="evaluate_content" property="evaluateContent" jdbcType="VARCHAR" />
    <result column="evaluate_date" property="evaluateDate" jdbcType="DATE" />
    <result column="user_type" property="userType" jdbcType="INTEGER" />
    <result column="user_name" property="userName" jdbcType="VARCHAR" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause" >
    <where >
      <foreach collection="example.oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, doctor_id, doctor_name, evaluate_value, evaluate_content, evaluate_date, user_type, 
    user_name
  </sql>
  <select id="selectByExample" resultMap="BaseResultMap" parameterType="xd.medicine.entity.bo.UserLogExample" >
    select
    <if test="distinct" >
      distinct
    </if>
    <include refid="Base_Column_List" />
    from user_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null" >
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from user_log
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from user_log
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="xd.medicine.entity.bo.UserLogExample" >
    delete from user_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="xd.medicine.entity.bo.UserLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_log (doctor_id, doctor_name, evaluate_value, 
      evaluate_content, evaluate_date, user_type, 
      user_name)
    values (#{doctorId,jdbcType=INTEGER}, #{doctorName,jdbcType=VARCHAR}, #{evaluateValue,jdbcType=TINYINT}, 
      #{evaluateContent,jdbcType=VARCHAR}, #{evaluateDate,jdbcType=DATE}, #{userType,jdbcType=INTEGER}, 
      #{userName,jdbcType=VARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="xd.medicine.entity.bo.UserLog" >
    <selectKey resultType="java.lang.Integer" keyProperty="id" order="AFTER" >
      SELECT LAST_INSERT_ID()
    </selectKey>
    insert into user_log
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="doctorId != null" >
        doctor_id,
      </if>
      <if test="doctorName != null" >
        doctor_name,
      </if>
      <if test="evaluateValue != null" >
        evaluate_value,
      </if>
      <if test="evaluateContent != null" >
        evaluate_content,
      </if>
      <if test="evaluateDate != null" >
        evaluate_date,
      </if>
      <if test="userType != null" >
        user_type,
      </if>
      <if test="userName != null" >
        user_name,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="doctorId != null" >
        #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null" >
        #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="evaluateValue != null" >
        #{evaluateValue,jdbcType=TINYINT},
      </if>
      <if test="evaluateContent != null" >
        #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="evaluateDate != null" >
        #{evaluateDate,jdbcType=DATE},
      </if>
      <if test="userType != null" >
        #{userType,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        #{userName,jdbcType=VARCHAR},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="xd.medicine.entity.bo.UserLogExample" resultType="java.lang.Integer" >
    select count(*) from user_log
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map" >
    update user_log
    <set >
      <if test="record.id != null" >
        id = #{record.id,jdbcType=INTEGER},
      </if>
      <if test="record.doctorId != null" >
        doctor_id = #{record.doctorId,jdbcType=INTEGER},
      </if>
      <if test="record.doctorName != null" >
        doctor_name = #{record.doctorName,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluateValue != null" >
        evaluate_value = #{record.evaluateValue,jdbcType=TINYINT},
      </if>
      <if test="record.evaluateContent != null" >
        evaluate_content = #{record.evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="record.evaluateDate != null" >
        evaluate_date = #{record.evaluateDate,jdbcType=DATE},
      </if>
      <if test="record.userType != null" >
        user_type = #{record.userType,jdbcType=INTEGER},
      </if>
      <if test="record.userName != null" >
        user_name = #{record.userName,jdbcType=VARCHAR},
      </if>
    </set>
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map" >
    update user_log
    set id = #{record.id,jdbcType=INTEGER},
      doctor_id = #{record.doctorId,jdbcType=INTEGER},
      doctor_name = #{record.doctorName,jdbcType=VARCHAR},
      evaluate_value = #{record.evaluateValue,jdbcType=TINYINT},
      evaluate_content = #{record.evaluateContent,jdbcType=VARCHAR},
      evaluate_date = #{record.evaluateDate,jdbcType=DATE},
      user_type = #{record.userType,jdbcType=INTEGER},
      user_name = #{record.userName,jdbcType=VARCHAR}
    <if test="_parameter != null" >
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="xd.medicine.entity.bo.UserLog" >
    update user_log
    <set >
      <if test="doctorId != null" >
        doctor_id = #{doctorId,jdbcType=INTEGER},
      </if>
      <if test="doctorName != null" >
        doctor_name = #{doctorName,jdbcType=VARCHAR},
      </if>
      <if test="evaluateValue != null" >
        evaluate_value = #{evaluateValue,jdbcType=TINYINT},
      </if>
      <if test="evaluateContent != null" >
        evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      </if>
      <if test="evaluateDate != null" >
        evaluate_date = #{evaluateDate,jdbcType=DATE},
      </if>
      <if test="userType != null" >
        user_type = #{userType,jdbcType=INTEGER},
      </if>
      <if test="userName != null" >
        user_name = #{userName,jdbcType=VARCHAR},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="xd.medicine.entity.bo.UserLog" >
    update user_log
    set doctor_id = #{doctorId,jdbcType=INTEGER},
      doctor_name = #{doctorName,jdbcType=VARCHAR},
      evaluate_value = #{evaluateValue,jdbcType=TINYINT},
      evaluate_content = #{evaluateContent,jdbcType=VARCHAR},
      evaluate_date = #{evaluateDate,jdbcType=DATE},
      user_type = #{userType,jdbcType=INTEGER},
      user_name = #{userName,jdbcType=VARCHAR}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>